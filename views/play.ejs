<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flixify</title>
    <!-- <script>
        const ROOM_ID = "<%= roomId %>"
    </script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <script defer src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js" defer></script>
    <script src="https://kit.fontawesome.com/c939d0e917.js"></script> -->
    <style>
        .main__right {
            background-color: #242324;
        }

        .main__right {
            display: flex;
            flex-direction: column;
            height: 56vh;
            width: 75vh;
            height: 100%;
            width: 100%;
        }

        .main__header {
            padding-top: 5px;
            color: #F5F5F5;
            text-align: center;
        }

        .main__chat_window {
            flex-grow: 1;
            overflow-y: auto;
        }

        .messages {
            color: white;
            list-style: none;
        }

        #chat_message {
            width: 74.4vh;
        }

        .grids {
            display: flex;
            flex-direction: column;
            height: 635px;
        }

        .all {
            display: flex;
            flex-direction: column;
        }
    </style>
</head>

<body>
    <div style="display: flex; flex-direction: row;">
        <iframe src="<%= movieAddress %>" width="900" height="670" frameborder="0" allowfullscreen="true"
            scrolling="no"></iframe>
        <div class="all">
            <div class="grids">
                <div id="chat-grid" style="border: black 2px solid; height: 56vh; width: 75vh;">
                    <div class="main__right">
                        <div class="main__header">
                            <h6>Chat</h6>
                        </div>
                        <div class="main__chat_window">
                            <ul class="messages">

                            </ul>
                        </div>
                        <div class="main__message_container">
                            <input id="chat_message" type="text" placeholder="Type message here...">
                        </div>
                    </div>
                </div>
                <div id="video-grid" style="height: 200px; width: 300px;">

                </div>
            </div>
            <div class="main__controls">
                <div class="main__controls__block">
                    <div onclick="muteUnmute()" class="main__controls__button main__mute_button">
                        <i class="fas fa-microphone"></i>
                        <label>Mute</label>
                    </div>
                    <div onclick="playStop()" class="main__controls__button main__video_button">
                        <i class="fas fa-video"></i>
                        <label>Stop Video</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        const videoGrid = document.getElementById('video-grid')
        const myVideo = document.createElement('video')
        const chatGrid = document.getElementById('chat-grid')
        myVideo.style.width = "40vh";
        myVideo.style.height = "40vh";
        myVideo.muted = true

        let myVideoStream
        navigator.mediaDevices.getUserMedia({
            video: true,
            audio: true
        }).then(stream => {
            myVideoStream = stream;
            addVideoStream(myVideo, stream)
        })

        const addVideoStream = (video, stream) => {
            video.srcObject = stream;
            video.addEventListener('loadedmetadata', () => {
                video.play();
            })
            videoGrid.append(video)
        }

        const muteUnmute = () => {
            const enabled = myVideoStream.getAudioTracks()[0].enabled;
            if (enabled) {
                myVideoStream.getAudioTracks()[0].enabled = false;
                setUnmuteButton();
            } else {
                setMuteButton();
                myVideoStream.getAudioTracks()[0].enabled = true;
            }
        }

        const playStop = () => {
            console.log('object')
            let enabled = myVideoStream.getVideoTracks()[0].enabled;
            if (enabled) {
                myVideoStream.getVideoTracks()[0].enabled = false;
                setPlayVideo()
            } else {
                setStopVideo()
                myVideoStream.getVideoTracks()[0].enabled = true;
            }
        }

        const setMuteButton = () => {
            const html = `
            <i class="fas fa-microphone"></i>
            <span>Mute</span>
        `
            document.querySelector('.main__mute_button').innerHTML = html;
        }

        const setUnmuteButton = () => {
            const html = `
            <i class="unmute fas fa-microphone-slash"></i>
            <span>Unmute</span>
        `
            document.querySelector('.main__mute_button').innerHTML = html;
        }

        const setStopVideo = () => {
            const html = `
            <i class="fas fa-video"></i>
            <span>Stop Video</span>
        `
            document.querySelector('.main__video_button').innerHTML = html;
        }

        const setPlayVideo = () => {
            const html = `
        <i class="stop fas fa-video-slash"></i>
            <span>Play Video</span>
        `
            document.querySelector('.main__video_button').innerHTML = html;
        }
    </script>
</body>

</html>